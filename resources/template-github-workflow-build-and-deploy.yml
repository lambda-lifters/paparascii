name: Build and Deploy

on: push
# pull_request:
# types:
# - closed
# branches:
# - main
# push

jobs:
  build-and-deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: latest
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: ${{ runner.os }}-clojure-${{ hashFiles('**/deps.edn') }}
          restore-keys: ${{ runner.os }}-clojure-
      
      - name: Install paparascii as tool
        run: |
          PA_BLOG_SHA=$( git ls-remote https://github.com/lambda-lifters/paparascii.git HEAD | cut -f 1)
          clojure -Ttools install io.github.lambda-lifters/paparascii \
          "{:git/url \"https://github.com/lambda-lifters/paparascii.git\" :git/sha \"${PA_BLOG_SHA}\"}" \
          :as paparascii

      - name: Build site
        run: clojure -Tpaparascii build
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to remote server
        run: |
          for i in bin public_html
          # remove --dry-run only once you're sure that this will do what you want it to
          do
            rsync --dry-run -avz --delete \
              -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
              TARGET/$i/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/$i
          done
      
      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/deploy_key
